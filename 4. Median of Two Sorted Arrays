There are two sorted arrays nums1 and nums2 of size m and n respectively.
有两个排序好了的数组，长度分别为m和n，找到两个数组的中位数。
Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).

Example 1:
nums1 = [1, 3]
nums2 = [2]

The median is 2.0
Example 2:
nums1 = [1, 2]
nums2 = [3, 4]

The median is (2 + 3)/2 = 2.5

解题思路：将两个数组排序，并保存在一个新的数组中，直接找中位数。

class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
	int size1 = nums1.size();
	int size2 = nums2.size();
	int size = size1 + size2;
	vector<int>nums(size);
	int i = 0;
	int j = 0;
	int k = 0;
	while (i <= size1&&j <= size2)
	{
		if (i == size1)
		{
			for (int l = k;l<size;l++)
			{
				nums[l] = nums2[j++];
			}
			break;
		}
		else if (j == size2)
		{
			for (int l = k;l<size;l++)
			{
				nums[l] = nums1[i++];
			}
			break;
		}
		else
		{
			if (nums1[i]<nums2[j])
			{
				nums[k] = nums1[i++];
				k++;
			}
			else
			{
				nums[k] = nums2[j++];
				k++;
			}
		}
	}
	if (size % 2 == 0)
	{
		return (double)(nums[size / 2 - 1] + nums[size / 2])/2;
	}
	else
		return (double)nums[size / 2];
    }
};
