未改进算法，时间复杂度o（n^2）空间复杂度o(m*n)
class Solution {
    int uniquePaths(int m, int n) {
        vector<vector<int> > path(m, vector<int> (n, 1));
        for (int i = 1; i < m; i++)
            for (int j = 1; j < n; j++)
                path[i][j] = path[i - 1][j] + path[i][j - 1];
        return path[m - 1][n - 1];
    }
};
 
动态规划 改进算法，时间复杂度o（n^2）空间复杂度o(min(m,n))
 class Solution {
public:
    int uniquePaths(int m, int n) {
        if(m>n)return uniquePaths(n,m);
        vector<int>cur(m,1);
        for(int i=1;i<n;i++)
            for(int j=1;j<m;j++)
                cur[j]+=cur[j-1];
            return cur[m-1];
    }
};
